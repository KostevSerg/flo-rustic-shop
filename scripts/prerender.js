import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const distPath = path.join(__dirname, '..', 'dist');
const indexPath = path.join(distPath, 'index.html');

const CITIES = [
  { slug: 'volgograd', name: '–í–æ–ª–≥–æ–≥—Ä–∞–¥' },
  { slug: 'barnaul', name: '–ë–∞—Ä–Ω–∞—É–ª' },
  { slug: 'bijsk', name: '–ë–∏–π—Å–∫' },
  { slug: 'belokuriha', name: '–ë–µ–ª–æ–∫—É—Ä–∏—Ö–∞' },
  { slug: 'moscow', name: '–ú–æ—Å–∫–≤–∞' },
  { slug: 'sankt-peterburg', name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥' },
  { slug: 'novosibirsk', name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫' },
  { slug: 'ekaterinburg', name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥' },
  { slug: 'kazan', name: '–ö–∞–∑–∞–Ω—å' },
  { slug: 'nizhnij-novgorod', name: '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥' },
];

function generateCityMeta(cityName, citySlug) {
  const title = `–î–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤ ${cityName} ‚Äî FloRustic | –ë—É–∫–µ—Ç—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –≤ ${cityName}`;
  const description = `–°–ª—É–∂–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ü–≤–µ—Ç–æ–≤ –≤ ${cityName}. –°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã –≤ ${cityName} ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1.5 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã. –†–æ–∑—ã, —Ç—é–ª—å–ø–∞–Ω—ã, –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã. –ë–æ–ª–µ–µ 500 –±—É–∫–µ—Ç–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ. –ó–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω 24/7!`;
  const url = `https://florustic.ru/city/${citySlug}`;
  
  return `
    <title>${title}</title>
    <meta name="description" content="${description}">
    <link rel="canonical" href="${url}">
    <meta property="og:type" content="website">
    <meta property="og:title" content="${title}">
    <meta property="og:description" content="${description}">
    <meta property="og:url" content="${url}">
    <meta property="og:site_name" content="FloRustic">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="${title}">
    <meta name="twitter:description" content="${description}">
  `;
}

console.log('üöÄ Starting prerendering...');

const indexHtml = fs.readFileSync(indexPath, 'utf8');

const cityDir = path.join(distPath, 'city');
if (!fs.existsSync(cityDir)) {
  fs.mkdirSync(cityDir, { recursive: true });
}

CITIES.forEach(({ slug, name }) => {
  const cityMeta = generateCityMeta(name, slug);
  const cityHtml = indexHtml.replace('</head>', `${cityMeta}</head>`);
  
  const cityPath = path.join(cityDir, slug);
  if (!fs.existsSync(cityPath)) {
    fs.mkdirSync(cityPath, { recursive: true });
  }
  
  fs.writeFileSync(path.join(cityPath, 'index.html'), cityHtml, 'utf8');
  console.log(`‚úÖ Generated: /city/${slug}/index.html`);
});

console.log(`‚úÖ Prerendering complete! Generated ${CITIES.length} city pages.`);
